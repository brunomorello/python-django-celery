version: '3.8'

services:
  redis:
    image: redis:7.2.5-alpine    

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  django:
    container_name: django
    build: 
      context: ./dcelery
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      # windows config
      - type: bind
        source: ./dcelery
        target: /usr/scr/app/
      # unix config
      # - ./dcelery:/usr/scr/app/
    working_dir: /usr/scr/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=0930jd30j9jd09j09j109fj010j0f
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis

  celery:
    container_name: celery
    build: 
      context: ./dcelery
    # added more queues
    command: celery --app=dcelery worker -l INFO -Q tasks
    volumes:
      # windows config
      - type: bind
        source: ./dcelery
        target: /usr/scr/app/
      # unix config
      # - ./dcelery:/usr/scr/app/
    working_dir: /usr/scr/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=0930jd30j9jd09j09j109fj010j0f
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      - redis
      - django
      - rabbitmq
  # disabled for while
  # celery_worker:
  #   build: 
  #     context: ./celery_worker
  #     dockerfile: Dockerfile
  #   command: celery -A celery_worker worker -l INFO -Q queue2
  #   volumes:
  #     # windows config
  #     - type: bind
  #       source: ./celery_worker
  #       target: /usr/scr/app/
  #   depends_on:
  #     - redis
  #     - django
